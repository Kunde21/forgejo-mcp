[{"type":"entity","name":"mcp_removal_plan","entityType":"project_plan","observations":["Comprehensive plan to remove all custom MCP server implementation and replace with official MCP SDK library","Identified extensive custom implementation across multiple files and components","Created phased migration approach to minimize disruption","Plan includes file removal, code consolidation, and testing updates","Current custom MCP implementation includes: Server struct with custom transport/dispatcher/processor, Transport interface with StdioTransport/SSETransport, RequestDispatcher/MessageProcessor/ToolRegistry, AuthState/AuthenticatedToolHandler authentication system","Custom MCP Server Wrapper (MCPServer struct) that wraps MCP SDK server, custom tool registration using mcp.AddTool, custom handler functions, mixed MCP SDK and custom authentication","Custom Transport Layer with transport interfaces, SSE implementation, JSON-RPC message processing, connection management adapters","Custom Tool System with tool definitions, registry, validation, and manifest generation","Multiple Handler Implementations: handlers.go (mock data), tea_handlers.go (Tea CLI integration), Gitea SDK integration handlers","Phase 1: Replace Custom Server with Pure MCP SDK - remove server/server.go, server/mcp_server.go, server/transport.go, server/tools.go","Phase 2: Handler Consolidation - keep functional handlers, remove mock data handlers, standardize on Gitea SDK integration, use MCP SDK CallToolRequest/CallToolResult types","Phase 3: Dependency Cleanup - update go.mod for MCP SDK primary dependency, remove unnecessary dependencies, simplify file structure","Phase 4: Testing and Validation - update tests for new architecture, ensure MCP protocol compliance, update configuration files","Files to Remove: server/server.go, server/mcp_server.go, server/transport.go, server/tools.go, mock handlers from server/handlers.go, custom tea integration from server/tea_handlers.go","Files to Modify: cmd/serve.go (simplify to pure MCP SDK), server/tea_handlers.go (keep Gitea SDK handlers), go.mod (dependency cleanup), test files (update for new architecture)","Benefits: Reduced complexity (~2000+ lines removed), better maintainability with official SDK, protocol compliance, simplified architecture, future-proof with SDK updates"]}]